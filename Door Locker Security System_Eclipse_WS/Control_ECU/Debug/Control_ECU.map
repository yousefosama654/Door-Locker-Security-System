Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./MCAL/usart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/gpio.o
LOAD ./MCAL/timer1.o
LOAD ./MCAL/twi.o
LOAD ./MCAL/usart.o
LOAD ./HAL/buzzer.o
LOAD ./HAL/dcmotor.o
LOAD ./HAL/external_eeprom.o
LOAD ./APPLICATION/app.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xdd8
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./MCAL/gpio.o
 .text          0x0000006c        0x0 ./MCAL/timer1.o
 .text          0x0000006c        0x0 ./MCAL/twi.o
 .text          0x0000006c        0x0 ./MCAL/usart.o
 .text          0x0000006c        0x0 ./HAL/buzzer.o
 .text          0x0000006c        0x0 ./HAL/dcmotor.o
 .text          0x0000006c        0x0 ./HAL/external_eeprom.o
 .text          0x0000006c        0x0 ./APPLICATION/app.o
 .text          0x0000006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x0000006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.GPIO_setupPinDirection
                0x0000006c      0x1d6 ./MCAL/gpio.o
                0x0000006c                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x00000242      0x1d6 ./MCAL/gpio.o
                0x00000242                GPIO_writePin
 .text.GPIO_readPin
                0x00000418      0x136 ./MCAL/gpio.o
                0x00000418                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x0000054e       0x88 ./MCAL/gpio.o
                0x0000054e                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x000005d6       0x88 ./MCAL/gpio.o
                0x000005d6                GPIO_writePort
 .text.GPIO_readPort
                0x0000065e       0x8a ./MCAL/gpio.o
                0x0000065e                GPIO_readPort
 .text.TWI_init
                0x000006e8       0x4c ./MCAL/twi.o
                0x000006e8                TWI_init
 .text.TWI_start
                0x00000734       0x20 ./MCAL/twi.o
                0x00000734                TWI_start
 .text.TWI_stop
                0x00000754       0x16 ./MCAL/twi.o
                0x00000754                TWI_stop
 .text.TWI_writeByte
                0x0000076a       0x2e ./MCAL/twi.o
                0x0000076a                TWI_writeByte
 .text.TWI_readByteWithACK
                0x00000798       0x26 ./MCAL/twi.o
                0x00000798                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x000007be       0x26 ./MCAL/twi.o
                0x000007be                TWI_readByteWithNACK
 .text.TWI_getStatus
                0x000007e4       0x1e ./MCAL/twi.o
                0x000007e4                TWI_getStatus
 .text.USART_init
                0x00000802      0x238 ./MCAL/usart.o
                0x00000802                USART_init
 .text.USART_sendByte
                0x00000a3a       0x3c ./MCAL/usart.o
                0x00000a3a                USART_sendByte
 .text.USART_recieveByte
                0x00000a76       0x1e ./MCAL/usart.o
                0x00000a76                USART_recieveByte
 .text.USART_sendString
                0x00000a94       0x52 ./MCAL/usart.o
                0x00000a94                USART_sendString
 .text.USART_recieveString
                0x00000ae6       0x86 ./MCAL/usart.o
                0x00000ae6                USART_recieveString
 .text.BUZZER_init
                0x00000b6c        0xe ./HAL/buzzer.o
                0x00000b6c                BUZZER_init
 .text.BUZZER_on
                0x00000b7a        0xe ./HAL/buzzer.o
                0x00000b7a                BUZZER_on
 .text.BUZZER_off
                0x00000b88        0xe ./HAL/buzzer.o
                0x00000b88                BUZZER_off
 .text.DcMotor_Init
                0x00000b96       0x2a ./HAL/dcmotor.o
                0x00000b96                DcMotor_Init
 .text.DcMotor_Rotate
                0x00000bc0       0x84 ./HAL/dcmotor.o
                0x00000bc0                DcMotor_Rotate
 .text.EEPROM_writeByte
                0x00000c44       0x82 ./HAL/external_eeprom.o
                0x00000c44                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000cc6       0xc0 ./HAL/external_eeprom.o
                0x00000cc6                EEPROM_readByte
 .text.main     0x00000d86        0xa ./APPLICATION/app.o
                0x00000d86                main
 .text.libgcc   0x00000d90       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000d90                __udivmodsi4
 .text.libgcc   0x00000dd4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000dd4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000dd4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000dd4                exit
                0x00000dd4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000dd4        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000dd8                _etext = .

.data           0x00800060        0x0 load address 0x00000dd8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/gpio.o
 .data          0x00800060        0x0 ./MCAL/timer1.o
 .data          0x00800060        0x0 ./MCAL/twi.o
 .data          0x00800060        0x0 ./MCAL/usart.o
 .data          0x00800060        0x0 ./HAL/buzzer.o
 .data          0x00800060        0x0 ./HAL/dcmotor.o
 .data          0x00800060        0x0 ./HAL/external_eeprom.o
 .data          0x00800060        0x0 ./APPLICATION/app.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./MCAL/gpio.o
 .bss           0x00800060        0x0 ./MCAL/timer1.o
 .bss           0x00800060        0x0 ./MCAL/twi.o
 .bss           0x00800060        0x0 ./MCAL/usart.o
 .bss           0x00800060        0x0 ./HAL/buzzer.o
 .bss           0x00800060        0x0 ./HAL/dcmotor.o
 .bss           0x00800060        0x0 ./HAL/external_eeprom.o
 .bss           0x00800060        0x0 ./APPLICATION/app.o
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000dd8                __data_load_start = LOADADDR (.data)
                0x00000dd8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1ac4
 *(.stab)
 .stab          0x00000000      0x87c ./MCAL/gpio.o
 .stab          0x0000087c       0xd8 ./MCAL/timer1.o
                                 0xe4 (size before relaxing)
 .stab          0x00000954      0x36c ./MCAL/twi.o
                                0x5c4 (size before relaxing)
 .stab          0x00000cc0      0x4c8 ./MCAL/usart.o
                                0x720 (size before relaxing)
 .stab          0x00001188      0x234 ./HAL/buzzer.o
                                0x240 (size before relaxing)
 .stab          0x000013bc      0x2d0 ./HAL/dcmotor.o
                                0x2dc (size before relaxing)
 .stab          0x0000168c      0x348 ./HAL/external_eeprom.o
                                0x3f0 (size before relaxing)
 .stab          0x000019d4       0xf0 ./APPLICATION/app.o
                                 0xfc (size before relaxing)

.stabstr        0x00000000     0x10d9
 *(.stabstr)
 .stabstr       0x00000000     0x10d9 ./MCAL/gpio.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Control_ECU.elf elf32-avr)
LOAD linker stubs
